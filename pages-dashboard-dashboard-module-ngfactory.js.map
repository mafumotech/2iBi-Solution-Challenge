{"version":3,"sources":["webpack:///./src/app/pages/dashboard/dashboard-routing.module.ts","webpack:///./src/app/pages/dashboard/dashboard.component.html","webpack:///./src/app/pages/dashboard/dashboard.component.ts","webpack:///./src/app/pages/dashboard/dashboard.module.ts","webpack:///./src/app/pages/dashboard/dashboard.service.ts","webpack:///./src/app/pages/xml/xml.component.html","webpack:///./src/app/pages/xml/xml.component.ts","webpack:///./src/app/shared/components/table-loading/box-loading.component.html","webpack:///./src/app/shared/components/table-loading/box-loading.component.ts","webpack:///./src/app/shared/components/table/table.component.html","webpack:///./src/app/shared/components/table/table.component.ts"],"names":[],"mappings":"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","file":"pages-dashboard-dashboard-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { XMLComponent } from '../xml/xml.component';\r\n\r\nconst routes:Route[]=[\r\n    {path:'',component:DashboardComponent},\r\n    {path:'xml',component:XMLComponent},\r\n]\r\n\r\n@NgModule({\r\n    imports:[\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class DashboardRoutingModule { }\r\n","\n<!-- <app-bread-crumb></app-bread-crumb> -->\n\n\n <section class=\"content\">\n\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <div class=\"box\">\n        <div class=\"box-header\">\n          <h3 class=\"box-title\">Lista de Países - API RESTCOUNTRIES</h3>\n          \n        </div>\n        <!-- /.box-header -->\n        <div class=\"box-body\">\n          <button (click)=\"generateXML()\" style=\"margin-bottom: 5px;\">XML</button>\n          <app-table  id_table=\"tabela_test_1\">\n            <ng-container class=\"tabela\" *ngIf=\"!isLoading\">\n              <thead>\n                <tr>\n                  <th>Nome</th>\n                  <th>Capital</th>\n                  <th>Região</th>\n                  <th>Sub-Região</th>\n                  <th>População</th>\n                  <th>Área</th>\n                  <th>Fusos Horários</th>\n                  <th>Nome Nativo</th>\n                  <th>Link da Bandeira</th>\n                </tr>\n                </thead>\n                <tbody>\n                 \n                  <tr *ngFor=\"let country of countries\">\n                    <td>{{country.name}}</td>\n                    <td>{{country.capital}}</td>\n                    <td>{{country.region}}</td>\n                    <td>{{country.subregion}}</td>\n                    <td>{{country.population}}</td>\n                    <td>{{country.area}}</td>\n                    <td>\n                      <span *ngFor=\"let tz of country.timezones\">{{tz}}<br></span>\n                    </td>\n                    <td>{{country.nativeName}}</td>\n                    <td>\n                        <img class=\"img-responsive\" [src]=\"country.flag\" alt=\"Flag\" style=\"width: 70px;height: 40px;\">\n                      <a [href]=\"country.flag\" target=\"_blank\">{{country.flag}}</a>\n                    </td>\n                  </tr>\n               \n                  </tbody>\n                  <tfoot>\n                    <tr>\n                      <th>Nome</th>\n                      <th>Capital</th>\n                      <th>Região</th>\n                      <th>Sub-Região</th>\n                      <th>População</th>\n                      <th>Área</th>\n                      <th>Fuso Horário</th>\n                      <th>Nome Nativo</th>\n                      <th>Link da Bandeira</th>\n                    </tr>\n                    </tfoot>\n            </ng-container>\n          </app-table>\n          \n        </div>\n        <!-- /.box-body -->\n\n        <app-box-loading class=\"overlay\" *ngIf=\"isLoading\"></app-box-loading>\n      </div>\n      <!-- /.box -->\n    </div>\n\n  </div>\n  <!-- /.row -->\n</section>","import { Router } from '@angular/router';\nimport { DashboardService } from './dashboard.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\ndeclare var $: any\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  countries: any[] = []\n  isLoading: boolean = false\n\n  @ViewChild('tabela') tabela: ElementRef\n  constructor(\n    private dashServ: DashboardService,\n    private nav: Router,\n  ) { }\n\n  ngOnInit() {\n    this.isLoading = true\n    this.dashServ.getCountries()\n      .subscribe(countries => {\n        this.isLoading = false\n        this.countries = countries\n        // console.log(countries)\n      }, () => this.isLoading = false)\n  }\n\n  generateXML() {\n\n      let xml = \"\";\n      $(\"#tabela_test_1 tr\").each(function() {\n          let cells = $(\"td\", this);\n          if (cells.length > 0) {\n              xml += \"<schedule name='\" + cells.eq(0).text() + \"'>\\n\";\n              for (let i = 1; i < cells.length; ++i) {\n                  xml += \"\\t<data>\" + cells.eq(i).text() + \"</data>\\n\";\n              }\n              xml += \"</schedule>\\n\";\n          }\n        });\n        // window.alert(xml);\n        this.nav.navigate(['/countries/xml']).then(()=>this.dashServ.setXML(xml))\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { XMLComponent } from '../xml/xml.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [DashboardComponent,XMLComponent],\r\n\r\n    imports: [\r\n        SharedModule,\r\n        DashboardRoutingModule\r\n    ],\r\n    exports: [],\r\n    providers: [],\r\n})\r\nexport class DashboardModule { }\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DashboardService {\r\n\r\n    xml:BehaviorSubject<any>=new BehaviorSubject<any>(null)\r\n\r\n    constructor(private http:HttpClient){}\r\n\r\n    getCountries():Observable<any[]>{\r\n        return this.http.get('https://restcountries.eu/rest/v2/all')\r\n        .pipe(map((countries:any[])=>countries))\r\n    }\r\n\r\n    setXML(xml){\r\n        this.xml.next(xml)\r\n    }\r\n\r\n    getXML(){\r\n        return this.xml.asObservable()\r\n    }\r\n    \r\n}","<div>\r\n    <pre>{{xml}}</pre>\r\n</div>","import { DashboardService } from './../dashboard/dashboard.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ng-xml',\r\n    templateUrl: 'xml.component.html'\r\n})\r\n\r\nexport class XMLComponent implements OnInit {\r\n    xml:any=\"\"\r\n    constructor(\r\n        private actr:ActivatedRoute,\r\n        public dashServ:DashboardService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.dashServ.getXML()\r\n        .subscribe(xml=>this.xml=xml)\r\n    }\r\n}","<i style=\"color: #31a982\" class=\"fa fa-circle-o-notch fa-spin\"></i>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-box-loading',\n  templateUrl: './box-loading.component.html',\n  styleUrls: ['./box-loading.component.css']\n})\nexport class BoxLoadingComponent implements OnInit {\n\n  constructor(){}\n\n  ngOnInit() {}\n\n}\n","<div class=\"table-responsive\">\n\n  <table #tabela [id]=\"id_table\" class=\"table table-bordered table-striped\">\n\n    <ng-content select=\".tabela\"></ng-content>\n\n  </table>\n\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\n\ndeclare var  $:any\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\n\nexport class TableComponent implements OnInit {\n\n @Input() paging: boolean=false;\n @Input() ordering: boolean=false;\n @Input() searching: boolean=true;\n @Input() showNEntries: boolean=true;\n @Input() id_table:any;\n\n constructor(){}\n\n  ngOnInit(){\n    this.initTable()\n  }\n\n  initTable(){\n\n    setTimeout(() => {\n\n      $('#'+this.id_table).DataTable({\n\n        dom: 'Bfrtip',\n        ordering:this.ordering,\n        paging:this.paging,\n        searching:this.searching,\n        info : this.showNEntries,\n        autoWidth: false,\n        buttons: [\n          'excel','csv'\n        ]\n\n      });\n\n    },50);\n\n  }\n\n}\n"],"sourceRoot":""}